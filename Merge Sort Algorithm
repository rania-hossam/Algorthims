
#include <iostream>
using namespace std;

void merge(int array[], int const left, int const mid,
           int const right)
{
    auto const subArray1 = mid - left + 1;
    auto const subArray2 = right - mid;
 
    
    auto *leftArray = new int[subArray1],
         *rightArray = new int[subArray2];
 
    
    for (auto i = 0; i < subArray1; i++)
        leftArray[i] = array[left + i];
    for (auto j = 0; j < subArray2; j++)
        rightArray[j] = array[mid + 1 + j];
 
    auto indexOfSubArray1
        = 0, 
        indexOfSubArray2
        = 0; 
    int indexOfMergedArray
        = left; 
 
    
    while (indexOfSubArray1 < subArray1
           && indexOfSubArray2 < subArray2) {
        if (leftArray[indexOfSubArray1]
            <= rightArray[indexOfSubArray2]) {
            array[indexOfMergedArray]
                = leftArray[indexOfSubArray1];
            indexOfSubArray1++;
        }
        else {
            array[indexOfMergedArray]
                = rightArray[indexOfSubArray2];
            indexOfSubArray2++;
        }
        indexOfMergedArray++;
    }
    
    while (indexOfSubArray1 < subArray1) {
        array[indexOfMergedArray]
            = leftArray[indexOfSubArray1];
        indexOfSubArray1++;
        indexOfMergedArray++;
    }
    
    while (indexOfSubArray2 < subArray2) {
        array[indexOfMergedArray]
            = rightArray[indexOfSubArray2];
        indexOfSubArray2++;
        indexOfMergedArray++;
    }
    delete[] leftArray;
    delete[] rightArray;
}
 

void mergeSort(int array[], int const begin, int const end)
{
    if (begin >= end)
        return; 
 
    auto mid = begin + (end - begin) / 2;
    mergeSort(array, begin, mid);
    mergeSort(array, mid + 1, end);
    merge(array, begin, mid, end);
}

void printArray(int A[], int size)
{
    for (auto i = 0; i < size; i++)
        cout << A[i] << " ";
}
 
// Driver code
int main()
{
    int arr[] = { 12, 11, 13, 5, 6, 7 };
    auto arr_size = sizeof(arr) / sizeof(arr[0]);
 
    cout << "Given array is \n";
    printArray(arr, arr_size);
 
    mergeSort(arr, 0, arr_size - 1);
 
    cout << "\nSorted array is \n";
    printArray(arr, arr_size);
    return 0;
}
 
// This code is contributed by Mayank Tyagi
// This code was revised by Joshua Estes
